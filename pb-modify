#!/bin/bash

MODULE=$1
STATE=$2
POLYBAR_CONFIG_PATH=~/bin/dotfiles/.config/polybar

print_usage() {
    echo "Usage: pb-modify <MODULE> <STATE>"
    echo ""
    echo "  State : on/off"
    echo "  Supported modules:"
    echo "      - ip"
}

check_args() {
    if [[ $MODULE != "ip" ]]; then
        print_usage
        exit
    elif [[ $STATE != "on" ]] && [[ $STATE != "off" ]]; then
        print_usage
        exit
    fi
}

adjust_ip() {
    # TODO : Understand why this doesn't work. It works on the command line, but not 
    # in the script...
    # on="label\-connected\ \=\ \\ \%essid\%\ \%local\_ip\%\ \祝\ \%upspeed\%\ \\ \%downspeed\%"
    # off="label\-connected\ \=\ \\ \%essid\%\ \祝\ \%upspeed\%\ \\ \%downspeed\%"
    if [[ $STATE == "on" ]]; then
        # cat $POLYBAR_CONFIG | sed s/$off/$on/ | tee $POLYBAR_CONFIG
        cp ~/bin/utils/data/config.ini.ip.on $POLYBAR_CONFIG_PATH/config.ini
    else
        # cat $POLYBAR_CONFIG | sed s/$on/$off/ | tee $POLYBAR_CONFIG
        cp ~/bin/utils/data/config.ini.ip.off $POLYBAR_CONFIG_PATH/config.ini
    fi
}

restart_polybar() {
    $POLYBAR_CONFIG_PATH/launch.sh > /dev/null
}

modify() {
    case $MODULE in 
        "ip")
            adjust_ip
            ;;
        *)
            echo "Unrecognized module"
            print_usage
            exit
            ;;
    esac
    restart_polybar
}

main() {
    check_args
    modify
}

main
